---
- name: install required softwares
  yum:
    name: "{{ item }}"
  with_items:
    - wget

- name: add Docker repo
  get_url:
    url: https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
  become: yes

- name: install Docker
  yum:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: setup docker daemon
  shell: |
    mkdir -p /etc/docker
    cat > /etc/docker/daemon.json <<EOF
    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
        "max-size": "100m"
      },
      "registry-mirrors" : [
        "https://docker.mirrors.ustc.edu.cn",
        "http://hub-mirror.c.163.com"
      ],
      "storage-driver": "overlay2"
    }
    EOF

- name: start Docker
  service:
    name: docker
    state: started

- name: enable docker service
  shell: |
    systemctl enable docker.service
    systemctl restart docker.service

- name: disable SELinux
  command: setenforce 0

- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: Disable swap
  command: swapoff -a

- name: disable SELinux on reboot
  selinux:
    state: disabled

- name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present

- name: ensure net.bridge.bridge-nf-call-iptables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: add Kubernetes' YUM repository
  shell: |
    cp  /etc/yum.repos.d/kubernetes.repo  /etc/yum.repos.d/kubernetes.repo.bak
    cat <<EOF > /etc/yum.repos.d/kubernetes.repo 
    [kubernetes] 
    name=Kubernetes 
    baseurl=https://repo.huaweicloud.com/kubernetes/yum/repos/kubernetes-el7-x86_64 
    enabled=1 
    gpgcheck=1 
    repo_gpgcheck=0
    gpgkey=https://repo.huaweicloud.com/kubernetes/yum/doc/yum-key.gpg https://repo.huaweicloud.com/kubernetes/yum/doc/rpm-package-key.gpg
    exclude=kubelet kubeadm kubectl
    EOF

- name: install kubelet, kubeadm, kubectl
  shell: |
    yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

- name: download Amazon EKS
  shell: |
    cd /usr/bin
    wget https://distro.eks.amazonaws.com/kubernetes-1-19/releases/4/artifacts/kubernetes/v1.19.8/bin/linux/amd64/kubelet
    wget https://distro.eks.amazonaws.com/kubernetes-1-19/releases/4/artifacts/kubernetes/v1.19.8/bin/linux/amd64/kubeadm
    wget https://distro.eks.amazonaws.com/kubernetes-1-19/releases/4/artifacts/kubernetes/v1.19.8/bin/linux/amd64/kubectl
    chmod +x kubeadm kubectl kubelet

- name: enable kubelet
  shell: |
    systemctl enable kubelet

- name: create /var/lib/kubelet/kubeadm-flags.env file
  shell: |
    mkdir /var/lib/kubelet/ -p
    echo KUBELET_KUBEADM_ARGS="--cgroup-driver=systemd —network-plugin=cni —pod-infra-container-image=public.ecr.aws/eks-distro/kubernetes/pause:3.2" > /var/lib/kubelet/kubeadm-flags.env file
